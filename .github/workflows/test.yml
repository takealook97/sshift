name: Test and Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        continue-on-error: true
        timeout-minutes: 5

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m --verbose

      - name: Run tests
        run: go test -v ./...

      - name: Run tests with coverage
        run: go test -v -coverprofile=coverage.out ./...

      - name: Check test coverage threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Test coverage: ${COVERAGE}%"
          if (( $(echo "$COVERAGE < 70" | bc -l) )); then
            echo "❌ Test coverage is below 70% (current: ${COVERAGE}%)"
            exit 1
          else
            echo "✅ Test coverage is above 70% (current: ${COVERAGE}%)"
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Run race detector
        run: go test -race -v ./...

      - name: Check for memory leaks
        run: |
          echo "🔍 Checking for memory leaks..."
          go test -v -memprofile=mem.prof ./...
          if [ -f mem.prof ]; then
            echo "📊 Memory profile generated"
            go tool pprof -list=. mem.prof | head -20
          fi
