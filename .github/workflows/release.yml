name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            binary_name: sshift-linux-amd64
          - goos: darwin
            goarch: amd64
            binary_name: sshift-darwin-amd64
          - goos: darwin
            goarch: arm64
            binary_name: sshift-darwin-arm64
          - goos: windows
            goarch: amd64
            binary_name: sshift-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
          cache: false

      - name: Run security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Clean and prepare build directory
        run: |
          echo "üßπ Cleaning build directory..."
          rm -rf dist/
          mkdir -p dist
          echo "‚úÖ Build directory prepared"

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          echo "üî® Building for ${{ matrix.goos }}/${{ matrix.goarch }}..."
          go build -ldflags "-X main.Version=${{ github.ref_name }} -s -w" -o dist/${{ matrix.binary_name }} main.go
          echo "‚úÖ Build completed: dist/${{ matrix.binary_name }}"

      - name: Verify binary
        run: |
          echo "üîç Verifying binary..."
          file dist/${{ matrix.binary_name }}
          ls -la dist/${{ matrix.binary_name }}

          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            echo "Windows binary created successfully"
          else
            chmod +x dist/${{ matrix.binary_name }}
            echo "‚úÖ Binary is executable"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: dist/${{ matrix.binary_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List downloaded files
        run: |
          echo "üìÅ Checking downloaded artifacts..."
          ls -la dist/ || echo "dist/ directory not found"
          find . -name "sshift-*" -type f || echo "No sshift binaries found"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/sshift-linux-amd64
            dist/sshift-darwin-amd64
            dist/sshift-darwin-arm64
            dist/sshift-windows-amd64.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
